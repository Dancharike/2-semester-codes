#include <iostream>
#include <vector>
#include <map>
#include <iomanip> // Include for setw

using namespace std;

// Student structure
struct student {
    char name[10];
    string id;
    int age;
    string major;
    double average_mark;
    string study_contract_status; // "free" or "paid"
};

// Function to perform linear search
int linear_search(const vector<student>& students, const string& key) {
    for (size_t i = 0; i < students.size(); ++i) {
        if (students[i].id == key) {
            return i; // Return index if found
        }
    }
    return -1; // Return -1 if not found
}

// Function to display student details
void display_student(const student& student) {
    cout << setw(10) << student.name << setw(7) << student.id << setw(5) << student.age << setw(20) << student.major << setw(15) << student.average_mark << setw(10) << student.study_contract_status << endl;
}

// Function to display all students
void display_all_students(const vector<student>& students) {
    cout << setw(10) << "Name~" << setw(7) << "Id~" << setw(5) << "Age~" << setw(20) << "Major~" << setw(15) << "Average mark~" << setw(10) << " Study contract status" << endl;
    for (const auto& student : students) {
        display_student(student);
    }
}

// Function to find student by ID
void find_student_by_id(const vector<student>& students) {
    string search_id;
    cout << "Enter student ID: ";
    cin >> search_id;

    int index = linear_search(students, search_id);
    if (index != -1) {
        cout << "Student with ID " << search_id << " found:" << endl;
        cout << setw(10) << "Name~" << setw(7) << "Id~" << setw(5) << "Age~" << setw(20) << "Major~" << setw(15) << "Average mark~" << setw(10) << " Study contract status" << endl;
        display_student(students[index]);
    } else {
        cout << "Student with ID " << search_id << " not found." << endl;
    }
}

int main() {
    // Sample data with Lithuanian names
    vector<student> students = {
            {"Jonas", "S001", 20, "Computer Science", 8.5, "paid"},
            {"Marius", "S002", 21, "Engineering", 7.9, "free"},
            {"Giedre", "S003", 19, "Mathematics", 9.1, "paid"},
            {"Lukas", "S004", 22, "Physics", 8.0, "paid"},
            {"Karolina", "S005", 20, "Biology", 8.7, "free"},
            {"EglÄ—", "S006", 23, "Chemistry", 8.2, "paid"},
            {"Simonas", "S007", 21, "Computer Engineering", 7.5, "free"},
            {"Viktorija", "S008", 20, "Economics", 8.9, "paid"},
            {"Tomas", "S009", 22, "Political Science", 8.3, "paid"},
            {"Ieva", "S010", 21, "Sociology", 8.6, "free"}
    };

    // Menu
    int choice;
    do {
        cout << "\nMenu:" << endl;
        cout << "1. List all existing students" << endl;
        cout << "2. Find student by ID" << endl;
        cout << "3. Close program" << endl;
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1:
                display_all_students(students);
                break;
            case 2:
                find_student_by_id(students);
                break;
            case 3:
                char confirm;
                cout << "Are you sure you want to close the program? (Y/N): ";
                cin >> confirm;
                if (toupper(confirm) == 'Y') {
                    cout << "Closing program..." << endl;
                    return 0;
                }
                break;
            default:
                cout << "Invalid choice. Please enter a valid option." << endl;
        }
    }
    while (true);
    return 0;
}
